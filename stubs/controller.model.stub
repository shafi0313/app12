<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ namespacedRequests }}
use Yajra\DataTables\Facades\DataTables;
use Illuminate\Http\Request;

class {{ class }} extends Controller
{
    protected $route = 'admin.{{ modelVariable }}s';

    /**
     * Display a listing of the resource.
     */
    public function index(Request $request)
    {
        if ($request->ajax()) {
            ${{ modelVariable }}s = {{ model }}::query();

            return DataTables::of(${{ modelVariable }}s)
                ->addIndexColumn()
                ->addColumn('is_active', function ($row) {
                    return view('button', ['type' => 'active', 'route' => hpnToUscr($this->route), 'row' => $row]);
                })
                ->addColumn('action', function ($row) {
                    $btn = '';
                    $btn .= view('button', ['type' => 'ajax-edit', 'route' => $this->route, 'row' => $row]);
                    $btn .= view('button', ['type' => 'ajax-delete', 'route' => $this->route, 'row' => $row]);

                    return $btn;
                })
                ->rawColumns(['is_active', 'action'])
                ->make(true);
        }

        return view('admin.{{ modelVariable }}.index');
    }

    /**
     * Change status the specified resource.
     */
    public function activeStatus({{ model }} ${{ modelVariable }})
    {
        ${{ modelVariable }}->is_active = ! ${{ modelVariable }}->is_active;

        try {
            ${{ modelVariable }}->save();

            return response()->json(['message' => 'The status has been updated'], 200);
        } catch (\Exception $e) {
            return response()->json(['message' => 'Oops something went wrong, Please try again.'], 500);
        }
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store({{ storeRequest }} $request)
    {
        $data = $request->validated();

        try {
            {{ model }}::create($data);

            return response()->json(['message' => 'The information has been inserted'], 200);
        } catch (\Exception $e) {
            return response()->json(['message' => 'Oops something went wrong, Please try again.'], 500);
        }
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(Request $request, {{ model }} ${{ modelVariable }})
    {
        if ($request->ajax()) {
            $route = route($this->route . '.update', ${{ modelVariable }}->id);
            $modal = view('admin.{{ modelVariable }}.edit', ['{{ modelVariable }}' => ${{ modelVariable }}, 'route' => $route])->render();

            return response()->json(['modal' => $modal], 200);
        }

        return abort(403, 'Unauthorized action.');
    }

    /**
     * Update the specified resource in storage.
     */
    public function update({{ updateRequest }} $request, {{ model }} ${{ modelVariable }})
    {
        $data = $request->validated();

        try {
            ${{ modelVariable }}->update($data);

            return response()->json(['message' => 'The information has been updated'], 200);
        } catch (\Exception $e) {
            return response()->json(['message' => 'Oops, something went wrong. Please try again later.'], 500);
        }
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{ model }} ${{ modelVariable }})
    {
        try {
            ${{ modelVariable }}->delete();

            return response()->json(['message' => 'The information has been deleted'], 200);
        } catch (\Exception $e) {
            return response()->json(['message' => 'Oops something went wrong, Please try again'], 500);
        }
    }
}
